// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quintilesims/eks-sso/pkg/auth (interfaces: AWS)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/quintilesims/eks-sso/pkg/models"
)

// MockAWS is a mock of AWS interface
type MockAWS struct {
	ctrl     *gomock.Controller
	recorder *MockAWSMockRecorder
}

// MockAWSMockRecorder is the mock recorder for MockAWS
type MockAWSMockRecorder struct {
	mock *MockAWS
}

// NewMockAWS creates a new mock instance
func NewMockAWS(ctrl *gomock.Controller) *MockAWS {
	mock := &MockAWS{ctrl: ctrl}
	mock.recorder = &MockAWSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAWS) EXPECT() *MockAWSMockRecorder {
	return m.recorder
}

// AddIAMCredentials mocks base method
func (m *MockAWS) AddIAMCredentials(arg0, arg1 string) (*models.AddCredentialsResponse, error) {
	ret := m.ctrl.Call(m, "AddIAMCredentials", arg0, arg1)
	ret0, _ := ret[0].(*models.AddCredentialsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddIAMCredentials indicates an expected call of AddIAMCredentials
func (mr *MockAWSMockRecorder) AddIAMCredentials(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddIAMCredentials", reflect.TypeOf((*MockAWS)(nil).AddIAMCredentials), arg0, arg1)
}

// GetClusterInfo mocks base method
func (m *MockAWS) GetClusterInfo(arg0, arg1 string) (*models.ClusterInfoResponse, error) {
	ret := m.ctrl.Call(m, "GetClusterInfo", arg0, arg1)
	ret0, _ := ret[0].(*models.ClusterInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterInfo indicates an expected call of GetClusterInfo
func (mr *MockAWSMockRecorder) GetClusterInfo(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterInfo", reflect.TypeOf((*MockAWS)(nil).GetClusterInfo), arg0, arg1)
}
